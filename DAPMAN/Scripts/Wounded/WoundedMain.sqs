_nDrag=0
_dragtime=0
_dragTimeLimit=20
_criticalwound=0

_unit = _this select 0

_playersonly = 0;
? (!(isNil("DAP_AIFAS_PLAYERSONLY"))): _playersonly = DAP_AIFAS_PLAYERSONLY;
?((!(isPlayer _unit))and(_playersonly==1)):[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setHit ["legs",0];}] call RE; exit

_dmg = getdammage _unit 
? !(alive _unit): exit

?((damage _unit) <=0.5): exit
?((damage _unit) >=0.7):_criticalwound=1

_fakit = 0
_mdkit = 0

?(isPlayer _unit): goto "SkipItemsCheck"

_allitems = []
_allitems = ((uniformItems _unit)+(vestItems _unit)+(backpackItems _unit))

_fakit = ({(_x == "FirstAidKit")} count _allitems)
_mdkit = ({(_x == "MediKit")} count _allitems)

?((getNumber (configFile >> "CfgVehicles" >> (typeOf _unit) >> "attendant"))==0): _unit removeItems "FirstAidKit"; _unit removeItems "MediKit"

_allitems = ((uniformItems _unit)+(vestItems _unit)+(backpackItems _unit))
?((!(isPlayer _unit)) and (({((_x == "FirstAidKit")or(_x == "MediKit"))} count _allitems)>0)): exit

#SkipItemsCheck
? _unit getVariable "DAP_WOUNDED_STATE"==1: exit

_side  = (side (group _unit))

?((rating _unit)<-2000): _renegadegroup = createGroup _side; [_unit] JoinSilent _renegadegroup

#MAIN

_unit setVariable ["DAP_WOUNDS_HITSTATE",nil,true]
_unit setVariable ["DAP_DRAGGED_STATE",true,true]
_unit setVariable ["DAP_WOUNDED_STATE",1,true]

?((!(isMultiplayer))and(_unit in switchableUnits)): _unit setVariable ["DAP_AIFAS_SWITCHABLEUNIT",1,true]; removeSwitchableUnit _unit 

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setUnconscious true;}] call RE;

_unit setVariable ["DAP_HEALTH_STATE",0,true]

_unit setVariable ["DAP_HEAL_STATE",0,true]
_unit setVariable ["DAP_DRAG_STATE",0,true]
_unit setVariable ["DAP_DRAG_RANGE",20,true]

_unit setVariable ["DAP_FORCEFINDHEALER",0,true];

_unit setVariable ["DAP_Drag",1,true]
_unit setVariable ["DAP_PFA",0,true]
_unit setVariable ["BIS_BC_dragged",true,true]
_unit setVariable ["BIS_BC_dragger",true,true]
_unit setVariable ["BIS_BC_carried",true,true]
_unit setVariable ["BIS_BC_carrier",true,true]
?(isPlayer _unit) : player setVariable ["DAP_Wound", 1,true]
_unit setVariable ["DAP_Wound_Free",3,true]
_unit setVariable ["DAP_WoundState",1,true]
_unit setVariable ["DAP_FAAction",0,true]

_woundtimer=0
_screamtimer=0
_rtimer=0

#SetAttributes

_unit setVariable ["BIS_noCoreConversations",true,true]

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setMimic "Hurt"; _man disableConversation true; _man setCaptive true; _man disableAI "ANIM"; _man disableAI "MOVE"; _man disableAI "TARGET"; _man disableAI "AUTOTARGET";}] call RE;

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1): [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

? ((alive _unit)and(_unit == (vehicle _unit))): goto "NotInVehicle"

? (alive _unit): _unit switchMove ((getArray (configFile >> "CfgMovesMaleSdr" >> "States" >> (animationState _unit)>>"interpolateTo")) select 0)
? (!(alive _unit)): goto "Dead"

_veh = (vehicle _unit)
_invehcargo = 0

_newvehturret = []

_vehturret = []
_vehmagazines = []

? ((toLower((assignedVehicleRole _unit) select 0))=="cargo"): _invehcargo = 1; goto "InVehicle"

? ((count(assignedVehicleRole _unit))>0): _vehturret = ((assignedVehicleRole _unit) select 0)
? ((count(assignedVehicleRole _unit))>1): _vehturret = ((assignedVehicleRole _unit) select 1)
? ((toLower((assignedVehicleRole _unit) select 0))=="driver"): _vehturret = [-1]
? (_unit == (driver _veh)): _vehturret = [-1]

_vehmagazines = (_veh magazinesTurret _vehturret);
{_veh removeMagazineTurret [_x,_vehturret];}ForEach _vehmagazines;

#InVehicle

~1

_woundtimer = _woundtimer+1

_unit doTarget objNull;

? (!(alive _unit)): goto "DiedInVehicle"
? (_unit == (vehicle _unit)): goto "DiedInVehicle"

? (_woundtimer>180): _unit setDammage 1; goto "DiedInVehicle"

? (_invehcargo == 1): goto "InVehicleCargo"
? (((toLower((assignedVehicleRole _unit) select 0))=="cargo")and(_invehcargo==0)): _invehcargo = 1; _unit switchMove ((getArray (configFile >> "CfgMovesMaleSdr" >> "States" >> (animationState _unit)>>"interpolateTo")) select 0); {_veh addMagazineTurret [_x,_vehturret];}ForEach _vehmagazines; goto "InVehicleCargo"

? ((count(assignedVehicleRole _unit))>0): _newvehturret = ((assignedVehicleRole _unit) select 0)
? ((count(assignedVehicleRole _unit))>1): _newvehturret = ((assignedVehicleRole _unit) select 1)
? ((toLower((assignedVehicleRole _unit) select 0))=="driver"): _newvehturret = [-1]
? (_unit == (driver _veh)): _newvehturret = [-1]

? ((str(_newvehturret)) != (str(_vehturret))): _unit switchMove ((getArray (configFile >> "CfgMovesMaleSdr" >> "States" >> (animationState _unit)>>"interpolateTo")) select 0); {_veh addMagazineTurret [_x,_vehturret];}ForEach _vehmagazines; _vehturret = _newvehturret; _vehmagazines = (_veh magazinesTurret _vehturret); {_veh removeMagazineTurret [_x,_vehturret];}ForEach _vehmagazines;

#InVehicleCargo
? ((alive _unit)and(_unit != (vehicle _unit))): goto "InVehicle"

#DiedInVehicle

? (_invehcargo == 0): {_veh addMagazineTurret [_x,_vehturret];}ForEach _vehmagazines;
? (!(alive _unit)): goto "Dead"

#NotInVehicle

~0.5

if ((primaryWeapon _unit) != "") then {[nil,_unit,rPLAYMOVENOW,"AinjPpneMstpSnonWrflDnon_rolltoback"] call RE;}else{[nil,_unit,rPLAYMOVENOW,"AinjPpneMstpSnonWnonDnon_rolltoback"] call RE;};

~6

? !(alive _unit): goto "Dead"

_woundanimations = ["acts_InjuredCoughRifle02","acts_InjuredLookingRifle01","acts_InjuredLyingRifle01"];
_woundanimation = ((_woundanimations)select(floor(random(count(_woundanimations)))))
_unitbodydir = (getDir _unit)

if ((damage _unit)<0.7) then {[nil, nil, rSPAWN, [_unit,_unitbodydir],{_man = _this select 0; _mandir = _this select 1; _man setDir (_mandir + 180);}] call RE; [nil,_unit,rSWITCHMOVE,_woundanimation] call RE;}else{[nil, nil, rSPAWN, [_unit,_unitbodydir],{_man = _this select 0; _mandir = _this select 1; _man setDir (_mandir + 180);}] call RE; [nil,_unit,rSWITCHMOVE,"acts_InjuredLyingRifle01"] call RE;};

~1

_unit setVariable ["DAP_DRAGGED_STATE",false,true]

_unit setVariable ["BIS_BC_dragged",false,true]
_unit setVariable ["BIS_BC_dragger",false,true]
_unit setVariable ["BIS_BC_carried",false,true]
_unit setVariable ["BIS_BC_carrier",false,true]

#HelpInit

_unitsquad = (units (group _unit))

{if ((_x getVariable "DAP_Drag"==1) or ((currentCommand _x) == "HEAL")) then {_unitsquad = _unitsquad-[_x];};}ForEach _unitsquad
{if (_x != vehicle _x) then {_unitsquad = _unitsquad-[_x];};}ForEach _unitsquad
? _unit getVariable "DAP_FORCEFINDHEALER"==1: goto "SearchAllies"
? (count _unitsquad)==0: _unit setVariable ["DAP_FORCEFINDHEALER",1,true]
? (({((getNumber (configFile >> "CfgVehicles" >> typeOf _x >> "attendant"))==1)}count _unitsquad)>0): goto "CheckState"

#SearchAllies
_nearestgroup = nearestObjects [_unit,["CAManBase","LandVehicle"],50]
_n = count _nearestgroup
_n = -1
#FindHealer
?!(alive _unit): goto "Dead"
_n =_n+1
? count _nearestgroup == 0: goto "CheckState"
? _n> count _nearestgroup: goto "CheckState"
_thatman = _nearestgroup select _n

? isNil("_thatman"): goto "CheckState"

? _unit getVariable "DAP_PFA"==1: goto "CheckState"
? _unit getVariable "DAP_WoundState"==0: goto "CheckState"
? ((rating _unit)<-2300): goto "CheckState"

? _thatman isKindOf "LandVehicle": goto "IsVehicle"

{if (((getNumber (configFile >> "CfgVehicles" >> typeOf _x >> "attendant"))==1) and ((currentCommand _x) != "HEAL") and ((_x distance _thatman) <=50) and ((_x getVariable "DAP_Drag")==0)) then {_thatman = _x;};}ForEach units group _thatman

? _thatman == _unit: goto "FindHealer"
? isPlayer _thatman: goto "FindHealer"

? (isPlayer (leader (group _thatman))): goto "FindHealer"
? (_thatman isKindOf "Civilian"): goto "FindHealer"

? !(alive _thatman): goto "FindHealer"
? !(canStand _thatman): goto "FindHealer"
? (getDammage _thatman >0.5): goto "FindHealer"
? ((currentCommand _thatman) == "HEAL") : goto "FindHealer"
? (_thatman getVariable "DAP_Drag"==1): goto "FindHealer"
? (_thatman getVariable "DAP_NOTDRAGGER"==1): goto "FindHealer"
? (_thatman == leader group _thatman) and (count units group _thatman>1) : goto "FindHealer"
? (side (group _thatman)) == _side: _dragger = _thatman; _dragger setVariable ["DAP_Drag",1,true]; goto "DragHim"
goto "FindHealer"

#IsVehicle

? !(alive _thatman) : goto "FindHealer"
? !(canMove _thatman) : goto "FindHealer"
? count(crew _thatman) == 0: goto "FindHealer"
_vehiclecargo = crew _thatman
{if((_x == driver _thatman) or (_x == gunner _thatman) or (_x == commander _thatman))then{_vehiclecargo=_vehiclecargo-[_x];};}ForEach _vehiclecargo
? count(_vehiclecargo) == 0 : goto "DriverOut"

_nc=0

#ResetCrewMan

_crewman = _vehiclecargo select _nc
_nc=_nc+1
? _nc> count(_vehiclecargo): goto "FindHealer"

{if (((getNumber (configFile >> "CfgVehicles" >> typeOf _x >> "attendant"))==1) and ((currentCommand _x) != "HEAL") and ((_x distance _thatman) <=50) and ((_x getVariable "DAP_Drag")==0)) then {_crewman = _x;};}ForEach _vehiclecargo

?!(alive _crewman) : goto "ResetCrewMan"
?!(canStand _crewman) : goto "ResetCrewMan"
? (isPlayer _crewman)  : goto "ResetCrewMan"
? _crewman == (leader (group _crewman)) : goto "ResetCrewMan"
? ((currentCommand _crewman) == "HEAL") : goto "ResetCrewMan"
? (_crewman getVariable "DAP_Drag"==1): goto "ResetCrewMan"
? (_crewman getVariable "DAP_NOTDRAGGER"==1): goto "ResetCrewMan"
? (side (group _crewman)) == _side: _vehicle = vehicle _crewman; _vehicle forceSpeed 0; _crewman setVariable ["DAP_Drag",1,true]; [_crewman] allowGetin false

~3

? ((group _crewman) == (group _unit)): _crewman setVariable ["DAP_ISCREW",1,true]; goto "CheckState"
? ((side (group _crewman)) == _side) and (alive _crewman) and (canStand _crewman)): _dragger = _crewman; _dragger setVariable ["DAP_Drag",1,true]; goto "DragHim"

goto "ResetCrewMan"

#DriverOut
_crewman = driver _thatman
_vehicle = _thatman

? _vehicle isKindOf "StaticWeapon" : _crewman = gunner _vehicle

? behaviour _crewman == "COMBAT": goto "FindHealer"
? ((currentCommand _crewman) == "HEAL") : goto "FindHealer"
? (_crewman getVariable "DAP_Drag"==1): goto "FindHealer"
? (_crewman getVariable "DAP_NOTDRAGGER"==1): goto "FindHealer"
? (side (group _crewman)) == _side:_crewman setVariable ["DAP_Drag",1,true]; [_crewman] allowGetin false

~3

? ((group _crewman) == (group _unit)): _crewman setVariable ["DAP_ISCREW",1,true]; goto "CheckState"
? ((side (group _crewman)) == _side) and (alive _crewman) and (canStand _crewman)): _dragger = _crewman; _dragger setVariable ["DAP_Drag",1,true]; goto "DragHim"
goto "FindHealer"

#CheckState

?!(alive _unit): goto "Dead"
?(isPlayer _unit): [nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setVariable ["BIS_BC_dragged",false]; _man setVariable ["BIS_BC_dragger",false];}] call RE

_woundtimer=_woundtimer+1
_dmg = getdammage _unit

?_woundtimer>120: _unit setVariable ["DAP_HEALTH_STATE",1,true]
?_woundtimer>180: goto "Dead"

? ((!(_unit GetVariable "BIS_BC_dragged")) and (_unit getVariable "DAP_Wound_Free"==2)): goto "RestoreState"
? ((!(_unit GetVariable "BIS_BC_dragged")) and (!(_unit GetVariable "BIS_BC_carried")) and (_unit getVariable "DAP_Wound_Free"==1)): goto "RestoreState"

?((_woundtimer>=(_rtimer+15)) and ((_unit getVariable "DAP_WoundState")==1)): _rtimer=_woundtimer; goto "HelpInit"

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

? (_dmg < 0.5): goto "Heal"

~1

goto "CheckState"

#Heal

#CheckDragStateB

~1

_dragstate =str(_unit GetVariable "BIS_BC_dragged");
_carriedstate = str(_unit GetVariable "BIS_BC_carried");
? _dragstate == "true": goto "CheckDragStateB"
? _carriedstate=="true": goto "CheckDragStateB"

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man disableAI "ANIM";}] call RE

? !(alive _unit): goto "Dead"

#Healed

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setUnconscious false;}] call RE

~1

?!(alive _unit): goto "Dead"
_unit setVariable ["DAP_Wound_Free",1,true]

? isPlayer _unit  : _unit setVariable ["DAP_Wound", 0,true]

? ((count((getPos _unit) nearEntities [["CAManBase"],5]))<=1): goto "SkipFriendlyCheck"

_nearunits = ((getPos _unit) nearEntities [["CAManBase"],5])
_nearunits = _nearunits - [_unit]

_unitdragger = (_nearunits select 0)
_draggerside = (side _unitdragger)

? ((((_side) getFriend (side (_unitdragger)))) < 0.6) or ((rating _unit) <= -2300)or ((rating _unitdragger) <= -2300)): _cuwhpos = _unitdragger modelToWorld [0.75,-0.15,0];_cholder = "WeaponHolderSimulated" createVehicle _cuwhpos;_cholder setPos [_cuwhpos select 0, _cuwhpos select 1, ((getPosATL _unitdragger select 2)+0.05)];_cholder setDir ((getDir _unitdragger)+((random 45)+15));{ if ((_ForEachIndex <= 2)and(!(_x==""))) then {_cholder AddWeaponCargoGlobal [_x,1];}; _unit removeWeapon _x;}ForEach [(primaryWeapon _unit),(secondaryWeapon _unit),(handgunWeapon _unit),"Binocular","Throw","Put"]; goto "HeEnemy"

#SkipFriendlyCheck
? isNil("_dragger"): goto "CheckWeaponState"

[nil, _dragger,"loc" ,rSPAWN, [_dragger],{_man = _this select 0; _man setHit ["legs",0];}] call RE

_dragger setVariable ["DAP_WOUNDED_STATE",0,true]
_dragger setVariable ["BIS_BC_injured",nil,true]

_dragger setVariable ["BIS_BC_dragger",false,true]
_dragger setVariable ["BIS_BC_dragged",false,true]

[nil,_dragger,rPLAYMOVENOW,"AmovPknlMstpSrasWrflDnon"] call RE
_dragger  setVariable ["BIS_noCoreConversations",false,true]

[nil, _dragger, rSPAWN, [_dragger],{_man = _this select 0;_man setUnitPos "AUTO";_man enableAI "ANIM";_man enableAI "MOVE";_man enableAI "TARGET";_man enableAI "AUTOTARGET";	_man disableConversation false;}] call RE

goto "CheckWeaponState"

#Dead

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setUnconscious false;}] call RE

_animState = (animationState _unit)
_animStateChars = (toArray(_animState))
_animType = ""

? ((count _animStateChars)>=5): _animType = toString [_animStateChars select 0,_animStateChars select 1,_animStateChars select 2,_animStateChars select 3,_animStateChars select 4]
? (((vehicle _unit) == _unit)and(_animType == "acts_")): [nil, nil, rSPAWN, [_unit,_unitbodydir],{_man = _this select 0; _mandir = _this select 1; _man setDir _mandir;}] call RE; [nil,_unit,rSWITCHMOVE,"AinjPpneMstpSnonWrflDnon"] call RE

? (alive _unit): _unit setDammage 1

_unit setVariable ["DAP_DRAGGED_STATE",false,true]

_unit setVariable ["BIS_BC_dragged",false,true]
_unit setVariable ["BIS_BC_dragger",false,true]
_unit setVariable ["BIS_BC_carried",false,true]

_unit setVariable ["DAP_WOUNDED_STATE",0,true]
_unit setVariable ["BIS_BC_injured",nil,true]

? (_fakit > 0): for "_i" from 1 to _fakit do {_unit addItem "FirstAidKit";};
? (_mdkit > 0): for "_i" from 1 to _mdkit do {_unit addItem "MediKit";};

? isNil ("_dragger") : goto "NoDraggerDeath"

[nil, _dragger,"loc" ,rSPAWN, [_dragger],{_man = _this select 0; _man setHit ["legs",0];}] call RE

_dragger setVariable ["DAP_WOUNDED_STATE",0,true]
_dragger setVariable ["BIS_BC_injured",nil,true]

_dragger setVariable ["BIS_BC_dragger",false,true]
_dragger setVariable ["BIS_BC_dragged",false,true]

[nil,_dragger,rPLAYMOVENOW,"AmovPknlMstpSrasWrflDnon"] call RE
_dragger  setVariable ["BIS_noCoreConversations",false,true]

[nil, _dragger, rSPAWN, [_dragger],{_man = _this select 0;_man setUnitPos "AUTO";_man enableAI "ANIM";_man enableAI "MOVE";_man enableAI "TARGET";_man enableAI "AUTOTARGET";_man disableConversation false;}] call RE

?((!(isMultiplayer))and((_dragger getVariable "DAP_AIFAS_SWITCHABLEUNIT")==1)): addSwitchableUnit _dragger

?!(isNil("_crewman")): [_dragger] allowGetin true; _vehicle forceSpeed -1

#NoDraggerDeath
? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 0,true]

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man  setVelocity [0,0,0.0001];}] call RE

exit

#RestoreState

~3

_nDrag=1
? _unit GetVariable "BIS_BC_dragged": _unit setVariable ["DAP_WoundState",0,true]; goto "CheckState"
? _unit GetVariable "BIS_BC_carried": _unit setVariable ["DAP_WoundState",0,true]; goto "CheckState"

? AnimationState _unit == "AinjPfalMstpSnonWnonDnon_carried_Up": _unit setVariable ["DAP_WoundState",0,true]; goto "CheckState"
? AnimationState _unit == "AinjPfalMstpSnonWrflDnon_carried_Up": _unit setVariable ["DAP_WoundState",0,true]; goto "CheckState"

_unit setVariable ["BIS_BC_dragged",true,true]
_unit setVariable ["BIS_BC_dragger",true,true]
_unit setVariable ["BIS_BC_carried",true,true]

[nil,_unit,rSWITCHMOVE,"AinjPpneMstpSnonWrflDnon"] call RE

~1

_unit setVariable ["DAP_Wound_Free",0,true]
_unit setVariable ["DAP_WoundState",1,true]

_unit setVariable ["DAP_DRAGGED_STATE",false,true]

_unit setVariable ["BIS_BC_dragged",false,true]
_unit setVariable ["BIS_BC_dragger",false,true]
_unit setVariable ["BIS_BC_carried",false,true]

goto "CheckState"

#DragHim
?!(alive _dragger) or ((damage _dragger) >0.5) or (!(canStand _dragger)) or ((currentCommand _dragger) == "HEAL") : _unit setVariable ["DAP_Wound_Free",0,true]; _unit setVariable ["DAP_DRAGGED_STATE",false,true]; _unit setVariable ["BIS_BC_dragged",false,true]; _unit setVariable ["BIS_BC_dragger",false,true]; _unit setVariable ["DAP_DRAGGED_STATE",false,true]; _unit setVariable ["BIS_BC_dragged",false,true]; _unit setVariable ["BIS_BC_carried",false,true] ; _unit setVariable ["DAP_HEAL_STATE",0,true];goto "CheckState"

?(isPlayer _unit): [nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setVariable ["BIS_BC_dragged",false]; _man setVariable ["BIS_BC_dragger",false];}] call RE

_dragger setVariable ["BIS_BC_dragger",true,true]
_dragger setVariable ["BIS_BC_dragged",true,true]
_dragger setVariable ["DAP_Drag",1,true]

?((!(isMultiplayer))and(_dragger in switchableUnits)): _dragger setVariable ["DAP_AIFAS_SWITCHABLEUNIT",1,true]; removeSwitchableUnit _dragger 

? behaviour _dragger == "COMBAT" or behaviour _dragger == "STEALTH": [nil, _dragger,"loc" ,rSPAWN, [_dragger],{_man = _this select 0; _man setUnitPos "MIDDLE";}] call RE

[nil, _dragger,"loc" ,rSPAWN, [_dragger],{_man = _this select 0; _man disableAI "TARGET"; _man disableAI "AUTOTARGET";}] call RE

_dragTimeLimit = _unit getVariable "DAP_DRAG_RANGE";
_pos_th =  _unit modelToWorld [0,0,0]

dostop _dragger
_dragger commandMove  [(_pos_th  select 0)-1.5*sin (_unitbodydir), (_pos_th  select 1)-1.5*cos (_unitbodydir), _pos_th  select 2]

#WaitDragger

? _unit GetVariable "BIS_BC_dragged": _dragger setVariable ["BIS_BC_dragger", false,true]; _dragger setVariable ["BIS_BC_dragged", false,true]; _dragger setVariable ["DAP_Drag",0,true]; doStop _dragger; [_dragger] JoinSilent (group _dragger); _dragger = nil; _unit setVariable ["DAP_WoundState",0,true]; goto "CheckState"
? _unit GetVariable "BIS_BC_carried": _dragger setVariable ["BIS_BC_dragger", false,true]; _dragger setVariable ["BIS_BC_dragged", false,true]; _dragger setVariable ["DAP_Drag",0,true]; doStop _dragger; [_dragger] JoinSilent (group _dragger); _dragger = nil; _unit setVariable ["DAP_WoundState",0,true]; goto "CheckState"

?!(alive _unit): goto "Dead"
?!(alive _dragger) or ((damage _dragger) >0.5) or (!(canStand _dragger)) or ((currentCommand _dragger) == "HEAL") : _unit setVariable ["DAP_Wound_Free",0,true]; _unit setVariable ["DAP_DRAGGED_STATE",false,true]; _unit setVariable ["BIS_BC_dragged",false,true]; _unit setVariable ["BIS_BC_dragger",false,true]; _unit setVariable ["DAP_DRAGGED_STATE",false,true]; _unit setVariable ["BIS_BC_dragged",false,true]; _unit setVariable ["BIS_BC_carried",false,true] ; _unit setVariable ["DAP_HEAL_STATE",0,true];goto "CheckState"

_woundtimer=_woundtimer+1

_dmg = getdammage _unit

?_woundtimer>120: _unit setVariable ["DAP_HEALTH_STATE",1,true]
?_woundtimer>180: goto "Dead"

? (alive _dragger) and ((getDammage _dragger) <0.5) and (canStand _dragger): _dragger doMove  [(getPos _unit select 0)-0.5*sin (_unitbodydir), (getPos _unit select 1)-0.5*cos (_unitbodydir), getPos _unit select 2] 
_pos_th =  _unit modelToWorld [0,0,0]
? _dragger distance _unit <= 3 and (_unit getVariable "DAP_WoundState"==1): dostop _dragger; [nil, _dragger,"loc" ,rSPAWN, [_dragger],{_man = _this select 0; _man disableAI "MOVE";}] call RE; _unit setVariable ["DAP_WoundState",0,true];_dragger setPos [(_pos_th select 0)-1.15*sin (_unitbodydir), (_pos_th select 1)-1.15*cos (_unitbodydir), _pos_th select 2]; goto "Helping"

?(_dmg <0.5): goto "Heal"

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

~1

goto "WaitDragger"
#Helping
? _unit GetVariable "BIS_BC_dragged": _dragger setVariable ["BIS_BC_dragger", false,true]; _dragger setVariable ["BIS_BC_dragged", false,true]; _dragger setVariable ["DAP_Drag",0,true]; doStop _dragger; [_dragger] JoinSilent (group _dragger); _dragger = nil; _unit setVariable ["DAP_WoundState",0,true]; goto "CheckState"
? _unit GetVariable "BIS_BC_carried": _dragger setVariable ["BIS_BC_dragger", false,true]; _dragger setVariable ["BIS_BC_dragged", false,true]; _dragger setVariable ["DAP_Drag",0,true]; doStop _dragger; [_dragger] JoinSilent (group _dragger); _dragger = nil; _unit setVariable ["DAP_WoundState",0,true]; goto "CheckState"

_unit setVariable ["DAP_HEAL_STATE",1,true]

_dragger setVariable ["BIS_BC_injured",_unit,true]

_unit setVariable ["DAP_DRAGGED_STATE",true,true]
_unit setVariable ["BIS_BC_dragged", true, true]
_unit setVariable ["BIS_BC_dragger", true, true]

[nil, _dragger, rSPAWN, [_dragger],{_man = _this select 0; _man setUnitPos "MIDDLE";}] call RE
[nil, _dragger, rSPAWN, [_dragger,(_unitbodydir)],{_man = _this select 0; _injuredddir = _this select 1; _man setDir _injuredddir;}] call RE
[nil,_unit,rSWITCHMOVE,"AinjPpneMstpSnonWrflDnon"] call RE

_pos_th =  _unit modelToWorld [0,0,0]

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

~0.05

?!(alive _dragger) or ((getDammage _dragger) >0.5) or (!(canStand _dragger)): _unit setVariable ["DAP_Wound_Free",0,true]; _unit setVariable ["DAP_WoundState",1,true]; goto "RestoreState"
? getPos _unit select 2 > 0.25 : goto "AIFABegin"
? _unit getVariable "DAP_DRAG_STATE"==1: goto "AIFABegin"
? ((((_side) getFriend (side _dragger) < 0.6) or ((rating _unit) <-2300)) and (behaviour _dragger != "COMBAT")): goto "AIFABegin"
? behaviour _dragger == "SAFE" or behaviour _dragger == "CARELESS": goto "AIFABegin"

? count nearestObjects [[(_pos_th select 0)-15*sin (getDir _unit), (_pos_th select 1)-15*cos (getDir _unit), _pos_th select 2], ["LandVehicle","Air","Ship","Static"], 25]>0: goto "AIFABegin"

[nil,_dragger,rPLAYMOVENOW,"AmovPercMstpSlowWrflDnon_AcinPknlMwlkSlowWrflDb_2"] call RE

#WaitGrab

~0.025

?!(alive _dragger) or ((damage _dragger) >0.5) or (!(canStand _dragger)): _unit setVariable ["DAP_Wound_Free",0,true]; _unit setVariable ["DAP_WoundState",1,true];  _unit setVariable ["DAP_DRAGGED_STATE",false,true]; _unit setVariable ["BIS_BC_dragged",false,true];goto "RestoreState"
? (animationState _dragger) != "AmovPercMstpSlowWrflDnon_AcinPknlMwlkSlowWrflDb_2": goto "WaitGrab"

[nil,_unit,rSWITCHMOVE,"AinjPpneMrunSnonWnonDb_grab"] call RE

[_unit, _dragger, [0.175,0.97,0],180] execVM "DAPMAN\Scripts\Wounded\Attach.sqf"

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

~0.05

?!(alive _dragger) or ((getDammage _dragger) >0.5) or (!(canStand _dragger)): detach _unit;  _unit setVariable ["DAP_WoundState",1,true]; [nil,_unit,rSWITCHMOVE,"AinjPpneMrunSnonWnonDb_death"] call RE; _unit setVariable ["DAP_Wound_Free",0,true]; goto "RestoreState"
_dscreamtimer=0

_currentdraggerdamage = damage _dragger

#Dragoff
_dragger setVariable ["DAP_WOUNDED_STATE",1,true]

[nil, _dragger, rSPAWN, [_dragger],{_man = _this select 0;_man disableAI "ANIM";}] call RE

_dragtime=_dragtime+1
[nil,_dragger,rPLAYMOVENOW,"AcinPknlMwlkSrasWrflDb"] call RE

? (alive _dragger) and ((Damage _dragger) >_currentdraggerdamage): goto "MoviePart"

? (!(alive _dragger)): goto "MoviePart"
? (!(alive _unit)): goto "DragRelease"

?(_dragTime >= _dragTimeLimit): goto "DragRelease"

? ((damage _unit) ==0)and(canStand _unit): goto "DragRelease"

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

~1

goto "Dragoff"
#DragRelease

~0.05

_dragger setVariable ["BIS_BC_dragged",true,true]
_dragger setVariable ["BIS_BC_dragger",true,true]

[nil,_dragger,rPLAYMOVENOW,"AcinPknlMstpSrasWrflDnon_AmovPknlMstpSrasWrflDnon"] call RE

[nil,_unit,rSWITCHMOVE,"AinjPpneMrunSnonWnonDb_death"] call RE

detach _unit

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

#AIFABegin

? ((damage _unit) ==0)and(canStand _unit): goto "Healed"

_unit setVariable ["DAP_DRAG_STATE",1,true]

_pos_th =  _unit modelToWorld [0,0,0]
_dragger doMove [(_pos_th select 0)-1.5*sin (_unitbodydir), (_pos_th select 1)-1.5*cos (_unitbodydir), _pos_th select 2]

?!(alive _unit): goto "RestoreDraggerState"
?!(alive _dragger): goto "DraggerDeath"

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

~3

? !(alive _dragger): goto "DraggerDeath"
_Offset = [-0.75,0.15,0]
_WorldPos = _unit modelToWorld _Offset
_dragger doMove _WorldPos

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

~1

? !(alive _dragger): goto "DraggerDeath"
_pos_th =  _unit modelToWorld [0,0,0]

[_dragger, _unit, [-0.75,0.15,0],90] execVM "DAPMAN\Scripts\Wounded\Attach.sqf"

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

~0.05

?!(alive _dragger): detach _dragger; goto "DraggerDeath"
?!(alive _unit): detach _dragger; [nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medicEnd"] call RE; goto "Dead"

[nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medic"] call RE

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

~2

?!(alive _dragger): detach _dragger; goto "DraggerDeath"
?!(alive _unit): detach _dragger; [nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medicEnd"] call RE; goto "Dead"

[nil,_dragger,rSWITCHMOVE,"AinvPknlMstpSnonWrflDnon_medic"] call RE
[nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medic1"] call RE

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

_fatimer=0
#AIFAA

~1

_fatimer=_fatimer+1
?(!(alive _dragger)):_fatimer=100
?_fatimer<4: goto "AIFAA" 

?!(alive _dragger): detach _dragger; goto "DraggerDeath"
?!(alive _unit): detach _dragger; [nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medicEnd"] call RE; goto "Dead"

[nil,_dragger,rSWITCHMOVE,"AinvPknlMstpSnonWrflDnon_medic"] call RE
[nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medic5"] call RE

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

_fatimer=0
#AIFAB

~1

_fatimer=_fatimer+1
?(!(alive _dragger)):_fatimer=100
?_fatimer<5: goto "AIFAB" 

?!(alive _dragger): detach _dragger; goto "DraggerDeath"
?!(alive _unit): detach _dragger; [nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medicEnd"] call RE; goto "Dead"

[nil,_dragger,rSWITCHMOVE,"AinvPknlMstpSnonWrflDnon_medic"] call RE
[nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medic3"] call RE

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

_fatimer=0
#AIFAC

~1

_fatimer=_fatimer+1
?(!(alive _dragger)):_fatimer=100
?_fatimer<15: goto "AIFAC" 

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

?!(alive _dragger): detach _dragger; goto "DraggerDeath"
?!(alive _unit): detach _dragger; [nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medicEnd"] call RE; goto "Dead"

[nil,_dragger,rSWITCHMOVE,"AinvPknlMstpSnonWrflDnon_medic"] call RE
[nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medic4"] call RE

?(((_side) getFriend (side _dragger) < 0.6) or ((rating _unit) <= -2300)or ((rating _dragger) <= -2300)): _cuwhpos = _dragger modelToWorld [0.75,-0.15,0];_cholder = "WeaponHolderSimulated" createVehicle _cuwhpos;_cholder setPos [_cuwhpos select 0, _cuwhpos select 1, ((getPosATL _unit select 2)+0.05)];_cholder setDir ((getDir _unit)+((random 45)+15));{ if ((_ForEachIndex <= 2)and(!(_x==""))) then {_cholder AddWeaponCargoGlobal [_x,1];}; _unit removeWeapon _x;}ForEach [(primaryWeapon _unit),(secondaryWeapon _unit),(handgunWeapon _unit),"Binocular","Throw","Put"]

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

_fatimer=0
#AIFAD

~1

_fatimer=_fatimer+1
?(!(alive _dragger)):_fatimer=100
?_fatimer<8: goto "AIFAD" 

?!(alive _dragger): detach _dragger; goto "DraggerDeath"

[nil,_dragger,rSWITCHMOVE,"AinvPknlMstpSnonWrflDnon_medic"] call RE
[nil,_dragger,rPLAYMOVENOW,"AinvPknlMstpSnonWrflDnon_medicEnd"] call RE

[nil, _dragger,"loc" ,rSPAWN, [_dragger],{_man = _this select 0; _man setHit ["legs",0];}] call RE

? (isPlayer _unit) : _unit setVariable ["DAP_Wound", 1,true]
? (isPlayer _unit) and (_unit getVariable "DAP_Wound"==1) : [_unit] execVM "DAPMAN\Scripts\Wounded\FX.sqf"

~1

?!(alive _dragger): detach _dragger; goto "DraggerDeath"
?!(alive _unit): detach _dragger; goto "Dead"

_draggerside  = (side (group _dragger))

? (alive _unit) : _unit setDammage 0.25
? (alive _unit) : [nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setHit ["legs",0];}] call RE
? (alive _unit) : [nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setHit ["hands",0];}] call RE

_dragmedic = getNumber (configFile >> "CfgVehicles" >> typeOf _dragger >> "attendant")
? !(isNil("_dragmedic")) and _dragmedic == 1 : _unit setDammage 0

? isPlayer _unit  : _unit setVariable ["DAP_Wound", 0,true]

detach _dragger

[nil, _dragger,"loc" ,rSPAWN, [_dragger],{_man = _this select 0; _man setHit ["legs",0];}] call RE

_dragger setVariable ["DAP_WOUNDED_STATE",0,true]
_dragger setVariable ["BIS_BC_injured",nil,true]

_dragger setVariable ["BIS_BC_dragger",false,true]
_dragger setVariable ["BIS_BC_dragged",false,true]

_dragger  setVariable ["BIS_noCoreConversations",false,true]

[nil, _dragger, rSPAWN, [_dragger],{_man = _this select 0;_man setUnitPos "AUTO";_man enableAI "ANIM";_man enableAI "MOVE";_man enableAI "TARGET";_man enableAI "AUTOTARGET";	_man disableConversation false;}] call RE

?((!(isMultiplayer))and((_unit getVariable "DAP_AIFAS_SWITCHABLEUNIT")==1)): addSwitchableUnit _unit 
?((!(isMultiplayer))and((_dragger getVariable "DAP_AIFAS_SWITCHABLEUNIT")==1)): addSwitchableUnit _dragger 

?!(alive _unit): goto "Dead"

~3

?!(alive _unit): goto "Dead"
_unit setVariable ["DAP_Wound_Free",1,true]

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setUnconscious false;}] call RE

? (((_side) getFriend (side _dragger) < 0.6) or ((rating _unit) <= -2300)or ((rating _dragger) <= -2300)): goto "HeEnemy"

#CheckWeaponState

_animState = (animationState _unit)
_animStateChars = (toArray(_animState))
_animType = ""

? ((count _animStateChars)>=5): _animType = toString [_animStateChars select 0,_animStateChars select 1,_animStateChars select 2,_animStateChars select 3,_animStateChars select 4]
? (((vehicle _unit) == _unit)and(_animType == "acts_")): [nil, nil, rSPAWN, [_unit,_unitbodydir],{_man = _this select 0; _mandir = _this select 1; _man setDir _mandir;}] call RE; [nil,_unit,rSWITCHMOVE,"AinjPpneMstpSnonWrflDnon"] call RE

_haveprimary = primaryWeapon _unit
? _haveprimary!="": goto "HaveRifle"
? _haveprimary=="": goto "NoRifle"

#HaveRifle

?(!(isPlayer _unit)): [nil,_unit,rSWITCHMOVE,"AinjPpneMstpSnonWrflDnon"] call RE

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man  setVelocity [0,0,0.0001];}] call RE

~1

?(!(isPlayer _unit)): [nil,_unit,rPLAYMOVENOW,"AmovPknlMstpSrasWrflDnon"] call RE

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man  setVelocity [0,0,0.0001];}] call RE

goto "EndofWeaponCheck"

#NoRifle

?(!(isPlayer _unit)): [nil,_unit,rSWITCHMOVE,"AinjPpneMstpSnonWnonDnon"] call RE

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man  setVelocity [0,0,0.0001];}] call RE

~1

?(!(isPlayer _unit)): [nil,_unit,rPLAYMOVENOW,"AmovPercMstpSnonWnonDnon"] call RE

#EndofWeaponCheck

?(isPlayer _unit): [nil,_unit,rSWITCHMOVE,"AinjPpneMstpSnonWnonDnon_rolltofront"] call RE 

_unit setVariable ["BIS_noCoreConversations",false,true]

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setUnconscious false; _man setCaptive false; _man setSpeedMode "FULL"; _man enableAI "ANIM"; _man enableAI "MOVE"; _man enableAI "TARGET"; _man enableAI "AUTOTARGET"; _man disableConversation false;}] call RE;

_unit setVariable ["DAP_DRAGGED_STATE",true,true]
_unit setVariable ["BIS_BC_dragged",false,true]
_unit setVariable ["BIS_BC_dragger",false,true]
_unit setVariable ["BIS_BC_carried",false,true]
_unit setVariable ["DAP_Drag",0,true]
_unit setVariable ["DAP_PFA",2,true]
_unit setVariable ["DAP_WoundState",0,true]

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man  setVelocity [0,0,0.0001];}] call RE

_unit setVariable ["DAP_WOUNDED_STATE",0,true]

? (_fakit > 0): for "_i" from 1 to _fakit do {_unit addItem "FirstAidKit";};
? (_mdkit > 0): for "_i" from 1 to _mdkit do {_unit addItem "MediKit";};

? isNil ("_dragger") : exit

_dragger setVariable ["DAP_Drag",0,true]
[_dragger] allowGetin true
?(!(isNull(AssignedVehicle _dragger))): AssignedVehicle _dragger forceSpeed -1

Goto "RestoreUnitInGroup"

#RestoreDraggerState

~5

_unit setVariable ["DAP_DRAGGED_STATE",false,true]

_unit setVariable ["BIS_BC_dragged",false,true]
_unit setVariable ["BIS_BC_dragger",false,true]
_unit setVariable ["BIS_BC_carried",false,true]

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man  setVelocity [0,0,0.0001];}] call RE

_unit setVariable ["DAP_PFA",2,true]

? isNil ("_dragger") : exit

_dragger setVariable ["BIS_BC_dragger",false,true]
_dragger setVariable ["BIS_BC_dragged",false,true]
_dragger setVariable ["DAP_Drag",0,true]
_dragger allowFleeing 0

[nil,_dragger,rPLAYMOVENOW,"AmovPknlMstpSrasWrflDnon"] call RE
_dragger setVariable ["BIS_noCoreConversations",false,true]

_dragger setHit ["legs",0]
_dragger setVariable ["DAP_WOUNDED_STATE",0,true]
_dragger setVariable ["BIS_BC_injured",nil,true]

?((!(isMultiplayer))and((_dragger getVariable "DAP_AIFAS_SWITCHABLEUNIT")==1)): addSwitchableUnit _dragger 

?!(isNil("_crewman")): [_dragger] allowGetin true; _vehicle forceSpeed -1

[nil, _dragger, rSPAWN, [_dragger],{_man = _this select 0;_man setUnitPos "AUTO";_man enableAI "ANIM";_man enableAI "MOVE";_man enableAI "TARGET";_man enableAI "AUTOTARGET";_man disableConversation false;}] call RE

exit

#DraggerDeath

detach _dragger 

[nil, _dragger,"loc" ,rSPAWN, [_dragger],{_man = _this select 0; _man  setVelocity [0,0,0.0001];}] call RE

_unit setVariable ["DAP_Wound_Free",0,true]
_unit setVariable ["DAP_WoundState",1,true]

_unit setVariable ["BIS_BC_dragged", false,true]
_unit setVariable ["BIS_BC_dragger", false,true]
_unit setVariable ["DAP_PFA",0,true]

_dragtime=0
_dragTimeLimit=5

_woundtimer=0
_screamtimer=0
_rtimer=0

_unit setVariable ["DAP_HEALTH_STATE",0,true]

_unit setVariable ["DAP_DRAG_RANGE",5,true]
_unit setVariable ["DAP_DRAG_STATE",0,true]
_unit setVariable ["DAP_HEAL_STATE",0,true]

goto "CheckState"

#MoviePart

detach _unit
_dragger setDammage 1

[nil,_unit,rSWITCHMOVE,"AinjPpneMrunSnonWnonDb_death"] call RE

[nil, _dragger,"loc" ,rSPAWN, [_dragger],{_man = _this select 0; _man  setVelocity [0,0,0.0001];}] call RE

_dragger setVariable ["BIS_BC_dragger",false,true]
_dragger setVariable ["BIS_BC_dragged",false,true]

~1

_unit setVariable ["DAP_Wound_Free",0,true]
_unit setVariable ["DAP_WoundState",1,true]

~1

_unit setVariable ["DAP_DRAGGED_STATE",false,true]
_unit setVariable ["BIS_BC_dragged",false,true]
_unit setVariable ["BIS_BC_dragger",false,true]
_unit setVariable ["BIS_BC_carried",false,true]
_unit setVariable ["DAP_PFA",0,true]

_unit setVariable ["DAP_HEAL_STATE",0,true]

goto "CheckState"

#RestoreUnitInGroup

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setUnconscious false;}] call RE

?!(isNil("_crewman")): [_dragger] allowGetin true; _vehicle forceSpeed -1

exit

#HeEnemy

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man setUnitPos "UP";}] call RE
[nil, nil, rSPAWN, [_unit,_unitbodydir],{_man = _this select 0; _mandir = _this select 1; _man setDir _mandir;}] call RE

?(isPlayer _unit): [nil,_unit,rSWITCHMOVE,"AinjPpneMstpSnonWnonDnon"] call RE; [nil,_unit,rPLAYMOVE,"AinjPpneMstpSnonWnonDnon_rolltofront"] call RE
?(!(isPlayer _unit)): [nil,_unit,rSWITCHMOVE,"AinjPpneMstpSnonWnonDnon"] call RE

~3

?(!(isPlayer _unit)): [nil,_unit,rPLAYMOVE,"AmovPercMstpSnonWnonDnon"] call RE

_unit setVariable ["BIS_noCoreConversations",false,true]

_unit setVariable ["DAP_DRAGGED_STATE",false,true]
_unit setVariable ["BIS_BC_dragged",false,true]
_unit setVariable ["BIS_BC_dragger",false,true]
_unit setVariable ["BIS_BC_carried",false,true]
_unit setVariable ["DAP_Drag",0,true]
_unit setVariable ["DAP_PFA",2,true]

? (!(isNil("_dragger"))): _dragger setVariable ["DAP_Drag",0,true]

[nil, _unit,"loc" ,rSPAWN, [_unit],{_man = _this select 0; _man  setVelocity [0,0,0.0001]; _man disableConversation false;}] call RE

~5

[nil,_unit,rPLAYMOVENOW,"AmovPercMstpSnonWnonDnon_AmovPercMstpSsurWnonDnon"] call RE
_unit setVariable ["DAP_WOUNDED_STATE",1,true]

[nil, _unit,"loc" ,rSPAWN, [_unit, _draggerside],{[(_this select 0),(_this select 1)] execVM "DAPMAN\Scripts\Wounded\Escape.sqf";}] call RE

exit